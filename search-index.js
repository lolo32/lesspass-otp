var searchIndex = JSON.parse('{\
"lesspass_otp":{"doc":"This crate can be used to generate password for any site,…","i":[[3,"Otp","lesspass_otp","Deals with the OTP authentication.",null,null],[3,"Settings","","Settings to derive a new password.",null,null],[3,"LessPass","","The main struct, this is where we define the master…",null,null],[4,"Algorithm","","Selects the hash algorithm to use in PBKDF or HMAC.",null,null],[13,"SHA1","","SHA1.",0,null],[13,"SHA256","","SHA2-256.",0,null],[13,"SHA384","","SHA2-384.",0,null],[13,"SHA512","","SHA2-512.",0,null],[13,"SHA3_256","","SHA3-256.",0,null],[13,"SHA3_384","","SHA3-384.",0,null],[13,"SHA3_512","","SHA3-512.",0,null],[4,"LessPassError","","Errors that can be return during password generation.",null,null],[13,"PasswordTooShort","","The password is too short.",1,null],[13,"PasswordTooLong","","The password is too long for the algorithm",1,null],[13,"NoCharsetSelected","","No charset is specified, so impossible to generate any…",1,null],[13,"UnsupportedAlgorithm","","The Algorithm specified is not valid where it is used.",1,null],[13,"InvalidLength","","The number of digits for the HOTP or TOTP is not valid.",1,null],[13,"InvalidBase32","","The provided string is not a valid base32 encoded string",1,null],[5,"decode_base32","","Decode a base32 encoded string.",null,[[],[["result",4],["vec",3],["lesspasserror",4]]]],[11,"pbkdf2","","Derive a PBKDF2 using current [Algorithm].",0,[[],["vec",3]]],[11,"hmac","","Derive a HMAC using current [Algorithm].",0,[[],["vec",3]]],[0,"charset","","Settings to define charset.",null,null],[3,"CharacterSet","lesspass_otp::charset","Configure the characters type to use in the resulting…",null,null],[4,"Set","","Charset that to be used during password derivation",null,null],[13,"Uppercase","","Use Uppercase letters",2,null],[13,"Lowercase","","Use Lowercase letters",2,null],[13,"Numbers","","Use numbers",2,null],[13,"Symbols","","Use symbols",2,null],[4,"LowerCase","","Is lowercase need to be used?",null,null],[13,"Using","","Use Lowercase",3,null],[13,"NotUsing","","Do not use Lowercase",3,null],[4,"UpperCase","","Is uppercase need to be used?",null,null],[13,"Using","","Use Uppercase",4,null],[13,"NotUsing","","Do not use Uppercase",4,null],[4,"Numbers","","Is numbers need to be used?",null,null],[13,"Using","","Use Numbers",5,null],[13,"NotUsing","","Do not use Numbers",5,null],[4,"Symbols","","Is symbols need to be used?",null,null],[13,"Using","","Use Symbols",6,null],[13,"NotUsing","","Do not use Symbols",6,null],[11,"new","","Specify which characters type to use in the final password.",7,[[["numbers",4],["uppercase",4],["symbols",4],["lowercase",4]]]],[11,"get_chars","","Get the characters lists that could be used.",7,[[],["string",3]]],[11,"get_charset_count","","Characters list length.",7,[[]]],[11,"get_serials","","Retrieve the list of [`Set`] configured.",7,[[],["vec",3]]],[11,"get_serial","","Retrieve the string corresponding of the `serial` [Set].",7,[[["set",4]]]],[11,"serial_len","","Get the characters length of the `serial` [Set].",7,[[["set",4]],["biguint",3]]],[11,"new","lesspass_otp","Create an instance from a binary secret",8,[[["option",4],["algorithm",4],["option",4],["option",4]],[["result",4],["lesspasserror",4]]]],[11,"totp","","`[feature = \\\"std_time\\\"]` Retrieve the TOTP code with…",8,[[],["string",3]]],[11,"totp_from_ts","","Retrieve the TOTP code with time number of seconds",8,[[],["string",3]]],[11,"hotp","","Retrieve the HOTP code, with `counter` being the current…",8,[[],["string",3]]],[11,"new","","Instantiate a new [`Settings`], specifying the characters…",9,[[["numbers",4],["uppercase",4],["symbols",4],["lowercase",4]]]],[11,"set_iterations","","Change number of iterations.",9,[[]]],[11,"get_iterations","","Get number of iterations configured, or default value.",9,[[]]],[11,"get_password_len","","Get password length.",9,[[]]],[11,"get_characterset","","Retrieve configured [`CharacterSet`].",9,[[],["characterset",3]]],[11,"set_algorithm","","Change default [`Algorithm`].",9,[[["algorithm",4]]]],[11,"get_algorithm","","Get the [`Algorithm`].",9,[[],[["option",4],["algorithm",4]]]],[11,"new","","Define master password to be used with every password.",10,[[["algorithm",4]],[["result",4],["lesspasserror",4]]]],[11,"password","","Derive a password from the settings provided in the…",10,[[["settings",3]],[["string",3],["lesspasserror",4],["result",4]]]],[11,"secret_hotp","","Decode a HOTP secret from aa previous encoded secret, or…",10,[[],[["result",4],["vec",3],["lesspasserror",4]]]],[11,"secret_totp","","Decode a TOTP secret from aa previous encoded secret, or…",10,[[],[["result",4],["vec",3],["lesspasserror",4]]]],[11,"get_fingerprint","","Get master password fingerprint.",10,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","lesspass_otp::charset","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"clone","lesspass_otp","",0,[[],["algorithm",4]]],[11,"clone","lesspass_otp::charset","",2,[[],["set",4]]],[11,"clone","","",3,[[],["lowercase",4]]],[11,"clone","","",4,[[],["uppercase",4]]],[11,"clone","","",5,[[],["numbers",4]]],[11,"clone","","",6,[[],["symbols",4]]],[11,"clone","lesspass_otp","",1,[[],["lesspasserror",4]]],[11,"default","","",9,[[]]],[11,"eq","","",0,[[["algorithm",4]]]],[11,"eq","lesspass_otp::charset","",2,[[["set",4]]]],[11,"eq","","",3,[[["lowercase",4]]]],[11,"eq","","",4,[[["uppercase",4]]]],[11,"eq","","",5,[[["numbers",4]]]],[11,"eq","","",6,[[["symbols",4]]]],[11,"eq","","",7,[[["characterset",3]]]],[11,"ne","","",7,[[["characterset",3]]]],[11,"eq","lesspass_otp","",1,[[["lesspasserror",4]]]],[11,"ne","","",1,[[["lesspasserror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","lesspass_otp::charset","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","lesspass_otp","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[4,"Algorithm"],[4,"LessPassError"],[4,"Set"],[4,"LowerCase"],[4,"UpperCase"],[4,"Numbers"],[4,"Symbols"],[3,"CharacterSet"],[3,"Otp"],[3,"Settings"],[3,"LessPass"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);